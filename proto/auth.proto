syntax = "proto3";

package auth;

service AuthService {
  rpc Login(LoginRequest) returns(LoginResponse) {}
  rpc Logout(LogoutRequest) returns (LogoutResponse) {}
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordResponse) {}
  rpc Validate(ValidateRequest) returns (ValidateResponse) {}
  rpc FindOneUserIdBySession(FindOneUserIdBySessionRequest) returns (FindOneUserIdBySessionResponse) {}
}

message UpdatePasswordRequest {
  string uuid = 1;
  string newPassword = 2;
  string oldPassword = 3;
}
message UpdatePasswordResponse {
  bool success = 1;
}

message LogoutRequest {
  string sessionId = 1;
  string deviceId = 2;
}

message RegisterRequest {
  string username = 1;
  string password = 2;
  string email = 3;
  string nickname = 4;
  string text = 5;
  string contact = 6;
}

message RegisterResponse {
  User user = 1;
  bool success = 2;
}

message FindOneUserIdBySessionRequest {
  string session = 1;
}

message FindOneUserIdBySessionResponse {
  string uuid = 1;
}

message ValidateResponse {
  bool permission = 1;
}

message ValidateRequest {
  string sessionId = 1;
  string deviceId = 2;
  string ip = 3;
}

message LogoutResponse {
  bool isLoggedOut = 1;
}

message LoginRequest {
  string username = 1;
  string password = 2;
  string sessionId = 3;
  int32 sessionExpire = 4;
  string deviceName = 5;
  string deviceType = 6;
  string ip = 7;
}

message LoginResponse {
  User user = 1;
  string deviceId = 2;
  string sessionId = 3;
  bool isLogged = 4;
}

message User {
  string uuid = 1;
  string username = 2;
  string email = 3;
  string nickname = 4;
  bool isEnabled = 5;
  bool isLocked = 6;
  bool isAvatar = 7;
  UserInfo info = 8;
  repeated string roles = 9;
}

message Role {
  string name = 1;
}

message UserInfo {
  string text = 1;
  string contact = 2;
}

message Image {
  string imageUuid = 1;
  string buffer = 2;
  string date = 3;
  string name = 4;
}